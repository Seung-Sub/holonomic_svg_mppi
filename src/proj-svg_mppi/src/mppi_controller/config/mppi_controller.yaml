# system
# control_cmd_topic: drive
control_cmd_topic: /robot/move_base/cmd_vel
# in_reference_sdf_topic: reference_sdf
in_reference_path_topic: /robot/move_base/GlobalPlanner/plan
# in_odom_topic: odom
in_odom_topic: /robot/robotnik_base_control/odom
is_activate_ad_topic: is_active_ad
# robot_frame_id: ego_racecar/base_link
robot_frame_id: robot_base_link
# map_frame_id: map
map_frame_id: robot_map

costmap_id: f1_costmap_2d/f1_costmap/costmap # used only not localize_less_mode
local_costmap_id: local_costmap # used only localize_less_mode
# local_costmap_id: /robot/move_base/local_costmap/costmap

backward_point_topic: backward_point
control_sampling_time: 0.025
use_local_costmap: true # if true, use local costmap of grid map. Otherwise, use global costmap of costmap 2d.
# Because the local costmap is more accurate than the global costmap (not effected pose estimation accuracy),
# we recommend to use the local costmap.
# NOTE: If you set localize_less_mode to true, force the use_local_costmap to true.
is_visualize_mppi: true
# if true, the speed is fixed to reference_speed. Otherwise, the reference speed is determined by the waypoints.
# NOTE: If you set localize_less_mode to true, force the constant_speed_mode to true.
collision_rate_threshold: 1.0 # [0, 1] If the collision rate is larger than this value, robot speed cmd is set to 0.
# stuck detection params
# This is currently only used in localize_less_mode.
# speed_deque_size: 10
# stuck_speed_threshold: 0.3 # [m/s]
mpc_mode: "svg_mppi" # "forward_mppi" or "reverse_mppi" or "sv_mpc" or "svg_mppi"

is_reference_path_less_mode: true # false: 참조 경로 없이 단일 목표 설정, true: 참조 경로 사용

# goal params
current_goal_topic: /robot/move_base/current_goal

lookahead_distance: 10000.0


common:
  thread_num: 12
  prediction_step_size: 30
  prediction_interval: 0.05


  max_Vx: 1.0
  min_Vx: -1.0
  max_Vy: 1.0
  min_Vy: -1.0
  max_Wz: 1.0
  min_Wz: -1.0

  collision_weight: 30000.0
  # If localize_less_mode, the following parameters (q_angle and q_dist) are ignored.
  q_dist: 0.5
  q_angle: 0.5
  q_terminal_dist: 0.6
  q_terminal_angle: 0.6

forward_mppi:
  sample_batch_num: 10000
  lambda: 1.0 # temperature parameter [0, inf) of free energy, which is a balancing term between control cost and state cost. #0.5~3.0
  alpha: 0.05 # weighting parameter [0, 1], which balances control penalties from previous control sequence and nominal control sequence. #0.05~0.1
  non_biased_sampling_rate: 0.1 # [0, 1]. add random noise to candidate control sequence with this rate. #0.05~0.1
  Vx_cov: 0.8
  Vy_cov: 0.8
  Wz_cov: 0.8

  # Parameters for estimating gradient of Reverse KLD
  num_itr_for_grad_estimation: 0 # If 0, vanilla MPPI is used without gradient estimation.
  step_size_for_grad_estimation: 0.001
  sample_num_for_grad_estimation: 100
  Vx_cov_for_grad_estimation: 0.01
  Vy_cov_for_grad_estimation: 0.01
  Wz_cov_for_grad_estimation: 0.01

reverse_mppi:
  sample_batch_num: 200
  negative_ratio: 1.0
  is_sample_rejection: true
  sample_inflation_ratio: 2.0
  iteration_num: 50
  step_size: 0.05
  warm_start_ratio: 0.5
  lambda: 3.0 # temperature parameter [0, inf) of free energy, which is a balancing term between control cost and state cost.
  alpha: 0.1 # weighting parameter [0, 1], which balances control penalties from previous control sequence and nominal control sequence.
  non_biased_sampling_rate: 0.1 # [0, 1]. add random noise to candidate control sequence with this rate.
  Vx_cov: 0.1
  Vy_cov: 0.1
  Wz_cov: 0.1


stein_variational_mpc:
  sample_batch_num: 500
  lambda: 4.0 # temperature parameter [0, inf) of free energy, which is a balancing term between control cost and state cost.
  alpha: 0.1
  non_biased_sampling_rate: 0.1 # [0, 1]. add random noise to candidate control sequence with this rate.
  Vx_cov: 0.1
  Vy_cov: 0.1
  Wz_cov: 0.1
  num_svgd_iteration: 3
  sample_num_for_grad_estimation: 10
  Vx_cov_for_grad_estimation: 0.01
  Vy_cov_for_grad_estimation: 0.01
  Wz_cov_for_grad_estimation: 0.01
  svgd_step_size: 0.5
  is_max_posterior_estimation: false

svg_mppi:
  sample_batch_num: 8000
  lambda: 1.0 # temperature parameter [0, inf) of free energy, which is a balancing term between control cost and state cost.
  non_biased_sampling_rate: 0.1 # [0, 1]. add random noise to candidate control sequence with this rate.
  alpha: 0.1 # weighting parameter [0, 1], which balances control penalties from previous control sequence and nominal control sequence.

  Vx_cov: 0.8 # initial covariance or constant covariance if is_covariance_adaptation is false
  Vy_cov: 0.8
  Wz_cov: 0.8

  guide_sample_num: 2
  grad_lambda: 1.0  #3.0
  sample_num_for_grad_estimation: 100

  Vx_cov_for_grad_estimation: 0.04 #0.01~0.1
  Vy_cov_for_grad_estimation: 0.04 #0.01~0.1
  Wz_cov_for_grad_estimation: 0.04 #0.01~0.1

  svgd_step_size: 0.01    #0.01~0.05
  num_svgd_iteration: 15  #10
  is_use_nominal_solution: true
  is_covariance_adaptation: true
  gaussian_fitting_lambda: 0.1

  min_Vx_cov: 0.01
  max_Vx_cov: 1.0
  min_Vy_cov: 0.01
  max_Vy_cov: 1.0
  min_Wz_cov: 0.01
  max_Wz_cov: 1.0